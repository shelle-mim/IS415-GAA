---
title: In-Class Exercise 3
date: "25 Jan 2023"
date-modified: "`r Sys.Date()`"
code-block-bg: "#e8e8df"
format: html
execute: 
  message: false
  warning: false
editor: visual
---

## Import Packages

```{r}
pacman::p_load(sf, tmap, tidyverse)
```

## Load Data

```{r}
NGA_wp = read_rds("data/rds/NGA_wp.rds")
```

```{r}
p1 <- tm_shape(NGA_wp) +
  tm_fill("wp_functional",
          n = 10,
          style = "equal",
          palette = "Blues") + #color scheme
  tm_borders(lwd = 0.1, #line width
             alpha = 1) + #opacity/transparency
  tm_layout(main.title = "Distribution of functional water points",
            legend.outside = FALSE)
```

```{r}
p1
```

```{r}
p2 <- tm_shape(NGA_wp) +
  tm_fill("total_wp",
          n = 10,
          style = "equal",
          palette = "Blues") + #color scheme
  tm_borders(lwd = 0.1, #line width
             alpha = 1) + #opacity/transparency
  tm_layout(main.title = "Distribution of functional water points",
            legend.outside = FALSE)
```

```{r}
tmap_arrange(p2, p1, nrow=1)
```

```{r}
# Add cols for percentile values for functional and nonfunctional WPs
NGA_wp <- NGA_wp %>%
  mutate(pct_functional = wp_functional/total_wp) %>%
  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)
```

## Extreme Value Maps

### Percentile map: special type of quantile map

Create a classification scheme (including of beginning and end)

```{r}
# Excluse NA records
NGA_wp <- NGA_wp %>%
  drop_na()
```

```{r}
# Create custom classification & extracting vals
percent <- c(0, .01, .1, .5, .9, .99, 1)
var <- NGA_wp["pct_functional"] %>%
  st_set_geometry(NULL) #drop away all the geometric fields
quantile(var[,1], percent)
```

```{r}
# function: extract out the data from df where variable name is vname
# where vname is a name, df is a dataframe)
# returns vector of values (without a col name
get.var <- function(vname, df) {
  v <- df[vname] %>%
    st_set_geometry(NULL)
  v <- unname(v[,1])
  return(v)
}
```

```{r}
percentmap <- function(vnam, df, legtitle=NA, mtitle="Percentile Map") {
  percent <- c(0, .01, .1, .5, .9, .99, 1)
  var <- get.var(vnam, df)
  bperc <- quantile(var, percent)
  tm_shape(df) +
    tm_polygons() +
    tm_shape(df) +
    tm_fill(vnam,
            title=legtitle,
            breaks=bperc,
            palette="Blues",
            labels=c("< 1%", "1% - 10%", "10% - 50%", "50% - 90%", "90% - 99%", ">99%")) +
  tm_borders() +
    tm_layout(main.title = mtitle,
              title.position = c("right", "bottom"),
              legend.outside = TRUE)
}
```

```{r}
percentmap ("pct_functional", NGA_wp)
```

## BoxPlot

```{r}
ggplot(data = NGA_wp, aes(x="", y=wp_nonfunctional)) +
  geom_boxplot()
```

## BoxMap

```{r}

```
