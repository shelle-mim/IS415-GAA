---
title: In-Class Exercise 2
date: "`r Sys.Date()`"
format: html
execute: 
  message: false
  warning: false
editor: visual
---

## Check if / install relevant packages

```{r}
pacman::p_load(sf, tidyverse, funModeling)
```

## Import Geospatial Data

### **GeoBoundaries data set**

```{r}
geoNGA = st_read(dsn = "data/geospatial",
                  layer = "geoBoundaries-NGA-ADM2") %>%
  st_transform(crs = 26392)
```

```{r}
head(geoNGA, n=3)
```

### **NGA data set**

```{r}
NGA <- st_read("data/geospatial/",
               layer = "nga_admbnda_adm2") %>%
  st_transform(crs = 26392)
```

```{r}
head(NGA, n=3)
```

## Import Aspatial Data

```{r}
wp_nga <- read_csv("data/aspatial/WPDEx.csv") %>%
  filter(`#clean_country_name` == "Nigeria")
```

```{r}
# Write to RDS format
saveRDS(wp_nga, file = "data/aspatial/wpa_nga.rds")
```

## Convert Aspatial to Geospatial

```{r}
wp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)
head(wp_nga)
```

```{r}
wp_sf <- st_sf(wp_nga, crs=4326)
wp_sf
```

## Projection Transformation

```{r}
# Transform to appropriate projected coordinate system of Nigeria
wp_sf <- wp_sf %>%
  st_transform(crs = 26392)
```

## Derive Proportion of Functional & Non Functional Water Points

```{r}
# Get different status of water points
unique(wp_sf$`#status_clean`)
```

```{r}
# Get functional & non functional water points
functional <- wp_sf %>% filter(`#status_clean` == "Functional") 
WP_Functional <- lengths(st_intersects(geoNGA, functional))
non_functional <- wp_sf %>% filter(`#status_clean` == "Non-Functional")
WP_Non_Functional <- lengths(st_intersects(geoNGA, non_functional))
```

```{r}
glimpse(functional)
```

```{r}
glimpse(non_functional)
```

Therefore, proportion is 45,883 (functional) : 29,385 (non functional)

## Combine Geospatial & Aspatial into simple feature data frame

```{r}
WP_Total <- lengths(st_intersects(geoNGA, wp_sf))

# Combine into a tibble
nga_combined <- tibble(geoNGA, WP_Functional, WP_Total)
nga_combined <- nga_combined %>%
  mutate(`WP_Functional_Proportion` = `WP_Functional`/`WP_Total`)
```

```{r}
# Remove NA values
nga_combined$`WP_Functional_Proportion`[is.na(nga_combined$`WP_Functional_Proportion`)] = 0
```

```{r}
# Plot of total water points
ggplot(data=nga_combined, 
       aes(x= as.numeric(`WP_Total`)))+
  geom_histogram(bins=20, 
                 color="black", 
                 fill="light blue") +
  labs(title = "Distribution of Total Water Points",
       x = "Number of Water Points",
       y = "Number of LGAs")

# Plot of functional water points
ggplot(data=nga_combined, 
       aes(x= as.numeric(`WP_Functional`)))+
  geom_histogram(bins=20, 
                 color="black", 
                 fill="light blue") +
  labs(title = "Distribution of Functional Water Points",
       x = "Number of Functional Water Points",
       y = "Number of LGAs")

# Plot of total water points against proportion functional
ggplot(data=nga_combined, 
       aes(y = `WP_Total`, 
           x= as.numeric(`WP_Functional_Proportion`)))+
  geom_point(color="black", 
             fill="light blue") +
  labs(title = "",
      x = "Proportion of Functional Water Points",
      y = "Total Water Points")
```
